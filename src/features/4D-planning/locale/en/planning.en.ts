import {
    CurrencyType,
    DelegateOptions,
    LinkType,
    ResourceMaterialUnitType,
    ResourceOtherUnitType,
    TaskConstraint,
    TaskDuration,
    TaskDurationFormat,
    TaskFieldDataType,
    TaskPercentageCompletion,
    TaskPhysicalQuantityUnit,
    TaskStatus,
    TaskType,
} from '../../constants';

export default {
    scheduling: {
        messages: {
            reschedulingSuccess: 'Planning have been rescheduled successful',
        },
    },
    breadcrumb: {
        planning: '4D planning',
        analyzer: 'Planning',
        viewer3D: '3D Viewer',
    },
    task: {
        renameForm: {
            title: 'Rename task',
            button: {
                cancel: 'Cancel',
                submit: 'Submit',
            },
        },
        tab: {
            updateTask: 'Update task',
            assignResource: 'Assign resource',
            assignResourceGroup: 'Assign resource group',
        },
        search: {
            option: {
                exact: 'Exact',
                appropriate: 'Appropriate',
                placeholder: 'Search mode',
            },
            value: {
                placeholder: 'Search value',
            },
            column: {
                placeholder: 'Search column',
            },
        },
        link: {
            popupTitle: {
                [LinkType.START_TO_START]:
                    'from start of <b>{from}</b> To start of <b>{to}</b>',
                [LinkType.START_TO_FINISH]:
                    'from start of <b>{from}</b> To end of <b>{to}</b>',
                [LinkType.FINISH_TO_START]:
                    'from end of <b>{from}</b> To start of <b>{to}</b>',
                [LinkType.FINISH_TO_FINISH]:
                    'from end of <b>{from}</b> To end of <b>{to}</b>',
            },
        },
        types: {
            [TaskType.STANDARD]: 'Standard',
            [TaskType.PROJECT]: 'Project',
            [TaskType.FINISH_MILESTONE]: 'Finish Milestone',
            [TaskType.START_MILESTONE]: 'Start Milestone',
            [TaskType.LEVEL_EFFORT]: 'Level Of Effort',
            [TaskType.RESOURCE_DEPENDENT]: 'Resource Dependent',
            [TaskType.WBS_SUMMARY]: 'WBS Summary',
            [TaskType.MILESTONE]: 'Milestone',
        },
        form: {
            title: 'Task detail',
            titleCreation: 'Create task',
            titleEdit: 'Update task',
            errors: {
                maxStart: 'Start date must be less then finish date',
                maxActualStart: 'Actual start date must be less than actual finish date',
                maxPlannedStart:
                    'Planned start date must be less than planned finish date',
                minFinish: 'Finish date must be greater than start date',
                minActualFinish:
                    'Actual finish date must be greater than actual start date',
                minPlannedFinish:
                    'Planned finish date must be greater than planned start date',
                minBaselineFinish:
                    'Baseline finish date must be greater than baseline start date',
                constraint: {
                    start: {
                        snet: 'Start must not be earlier than {date}',
                        snlt: 'Start must not be later than {date}',
                        mso: 'Start must be equal to {date}',
                    },
                    finish: {
                        fnet: 'Finish must not be earlier than {date}',
                        fnlt: 'Finish must not be later than {date}',
                        mfo: 'Finish must be equal to {date}',
                    },
                },
            },
            placeholders: {
                id: 'Enter activity ID',
                name: 'Enter activity name',
                parentName: 'WBS name',
                type: 'Choose activity type',
                status: 'Choose status',
                start: 'Choose start date',
                actualStart: 'Choose actual start date',
                plannedStart: 'Choose planned start date',
                finish: 'Choose finish date',
                actualFinish: 'Choose actual finish date',
                plannedFinish: 'Choose planned finish date',
                baselineStart: 'Choose baseline start date',
                baselineFinish: 'Choose baseline finish date',
                primaryConstraint: 'Choose primary constraint',
                primaryConstraintDate: 'Choose primary constraint date',
                expectedFinish: 'Choose expected finish date',
                durationType: 'Choose duration type',
                originalDuration: 'Enter original duration',
                actualDuration: 'Enter actual duration',
                plannedDuration: 'Enter planned duration',
                remainingDuration: 'Enter remaining duration',
                completeType: 'Choose complete type',
                manualComplete: 'Enter % complete',
                physicalQuntityUnit: 'Choose unit',
                physicalQuantity: 'Enter physical quantity',
                actualPhysicalQuantity: 'Enter actual physical quantity',
                rules: 'Enter rules',
                appearanceProfile: 'Choose appearance profile',
                calendar: 'Choose calendar',
            },
        },
        errors: {
            insufficientPermission:
                "You don't have sufficient permission to perform this action",
            required: {
                actualFinish: 'The Actual finish field is required',
                actualStart: 'The Actual start field is required',
                plannedFinish: 'The planned finish field is required',
                plannedStart: 'The planned start field is required',
            },
        },
        messages: {
            createdTask: 'Created a task',
            createdLink: 'Created a link',
            deletedLink: 'Deleted link',
            updatedTask: 'Updated task',
            renameTask: 'Rename task successful',
            confirmDelete: 'Are you sure to delete task {name}',
            titleConfirmDelete: 'Delete task',
            deleted: 'Deleted task',
            bulkUpdateSuccess: 'Task have been updated successful',
        },
    },
    buttons: {
        userField: 'User field',
        addField: 'Add field',
        filter: 'Filter',
        importXML: 'Import xml',
        exportXML: 'Export xml',
        delegate: 'Delegate',
        synthesis: 'Synthesis',
        resource: 'Resource',
        assignResource: 'Assign Resource',
        assignResourceGroup: 'Assign Resource Group',
        resourceGroup: 'Resource Group',
        appearanceProfile: 'Appearance Profile',
        create: 'Create',
        save: 'Save',
        cancel: 'Cancel',
        edit: 'Edit',
        gridSettings: 'Grid settings',
        baseLine: 'Baseline',
        createBaseline: 'Create baseline',
        delete: 'Delete',
        topDown: 'Top down',
        bottomUp: 'Bottom up',
        createPlanningN: "Create planning N'",
        reset: 'Reset',
        updateName: 'Update',
        settingBaseline: 'Baseline Settings',
        displayBaseline: 'Display',
        colorBaseline: 'Color',
        positionBaseline: 'Position',
        thicknessBaseline: 'Thickness',
        activityCode: 'Activity code',
        assignActivityCode: 'Assign activity code',
        select: 'Select',
        zoomIn: 'Zoom In',
        zoomOut: 'Zoom Out',
        planningSettings: 'Planning settings',
        rescheduling: 'Rescheduling',
        updateDelegation: 'Update delegation',
        updateMilestones: 'Update milestones',
        cancelDelegation: 'Cancel delegation',
        default: 'Default',
        skipAll: 'Skip all',
        import: 'Import',
        export: 'Export',
        saveAs: 'Save as',
        add: 'Add',
    },
    folderForm: {
        labels: {
            planName: 'Planning name',
        },
        buttons: {
            cancel: 'Cancel',
            back: 'Back',
            next: 'Next',
            submit: 'Submit',
            delete: 'Delete',
        },
        folders: 'Folders',
        delegate: {
            success: 'Delegated tasks successfully',
            confirmDelegateTitle: 'Delegate tasks',
            confirmDelegateMessage: `Are you sure you want to delegate tasks to planning {planningName} ?`,
            options: {
                [DelegateOptions.NEW_PLANNING]: 'To new planning',
                [DelegateOptions.EXIST_PLANNING]: 'To exist planning',
            },
            validateMessage: 'Please select a planning',
        },
        synthesis: {
            success: 'Synthesis success',
            emptyPlanning: 'Please select at least one planning',
        },
        cancelDelegation: {
            success: 'Cancel delegation successfully',
            confirmTitle: 'Cancel delegation',
            confirmMessage: 'Are you sure you want to cancel delegation?',
        },
    },
    gantt: {
        marker: {
            dataDate: {
                text: 'Data date',
            },
        },
        lightbox: {
            labels: {
                name: 'Task name',
                time: 'Time',
                type: 'Type',
            },
        },
        columns: {
            activityCode: 'Activity code',
            activityCodeValue: 'Activity code value',
            id: 'Activity ID',
            status: 'Activity status',
            type: 'Activity type',
            parentId: 'WBS code',
            parentName: 'WBS name',
            name: 'Activity name',
            calendarName: 'Calendar name',
            start: 'Start',
            actualStart: 'Actual start',
            earlyStart: 'Early start',
            lateStart: 'Late start',
            plannedStart: 'Planned start',
            blStart: 'BL start',
            finish: 'Finish',
            actualFinish: 'Actual finish',
            earlyFinish: 'Early finish',
            lateFinish: 'Late finish',
            plannedFinish: 'Planned finish',
            blFinish: 'BL finish',
            prConstraint: 'Primary constraint',
            prConstraintDate: 'Primary constraint date',
            expectedFinish: 'Expected finish',
            durationType: 'Duration type',
            plannedDuration: 'Planned duration',
            originalDuration: 'Original duration',
            actualDuration: 'Actual duration',
            remainingDuration: 'Remaining duration',
            atCompleteDuration: 'At complete duration',
            blDuration: 'BL duration',
            VBLDuration: 'Variance - BL duration',
            VBLFinishDate: 'Variance - BL Finish Date',
            VBLStartDate: 'Variance - BL Start Date',
            freeFloat: 'Free float',
            totalFloat: 'Total float',
            critical: 'Critical',
            percentCompleteType: 'Percent complete type',
            physicalPercentage: 'Physical % Complete',
            durationPercentage: 'Duration % Complete',
            manualPercentage: 'Manual % Complete',
            physicalUnit: 'Physical quantity unit',
            physicalQuantity: 'Physical quantity',
            actualPhysicalQuantity: 'Actual physical quantity',
            remainPhysicalQuantity: 'Remaining physical quantity',
            rules: 'Percent Completed',
            code: 'Activity code',
            appearanceProfile: 'Appreance profile',
            resouce3D: 'Resource 3D',
            resourceGroup: 'Resource group',
            all: 'All columns',
            calendar: 'Calendar',
            action: 'Action',
        },
        task: {
            prefix: '<b>Start at: </b> {date}',
        },
        status: {
            [TaskStatus.TODO]: 'Not Started',
            [TaskStatus.IN_PROGRESS]: 'In Progress',
            [TaskStatus.FINISHED]: 'Finished',
        },
        primaryConstraints: {
            [TaskConstraint.ASAP]: 'As soon as possible',
            [TaskConstraint.ALAP]: 'As late as possible',
            [TaskConstraint.SNET]: 'Start no earlier than',
            [TaskConstraint.SNLT]: 'Start no later than',
            [TaskConstraint.FNET]: 'Finish no earlier than',
            [TaskConstraint.FNLT]: 'Finish no later than',
            [TaskConstraint.MSO]: 'Must start on',
            [TaskConstraint.MFO]: 'Must finish on',
        },
        durationTypes: {
            [TaskDuration.STANDARD]: 'Standard',
            [TaskDuration.RESOURCE_UNITS_DEPENDENT]: 'Resource unit dependent',
            [TaskDuration.PHYSICAL_QUANTITY_DEPENDENT]: 'Physical quantity dependent',
        },
        percentCompleteTypes: {
            [TaskPercentageCompletion.PHYSICAL_COMPLETE]: 'Physical % complete',
            [TaskPercentageCompletion.DURATION_COMPLETE]: 'Duration % complete',
            [TaskPercentageCompletion.MANUAL_COMPLETE]: 'Manual % complete',
        },
        physicalQuantityUnit: {
            [TaskPhysicalQuantityUnit.BAG]: 'Bag',
            [TaskPhysicalQuantityUnit.BOX]: 'Box',
            [TaskPhysicalQuantityUnit.BUCKET]: 'Bucket',
            [TaskPhysicalQuantityUnit.BUNDLE]: 'Bundle',
            [TaskPhysicalQuantityUnit.CRANE]: 'Crane',
            [TaskPhysicalQuantityUnit.CARTON]: 'Carton',
            [TaskPhysicalQuantityUnit.CUBIC_FEET]: 'Cubic feet',
            [TaskPhysicalQuantityUnit.CUBIC_METRE]: 'Cubic metre',
            [TaskPhysicalQuantityUnit.CUBIC_YARD]: 'Cubic yard',
            [TaskPhysicalQuantityUnit.DOZEN]: 'Dozen',
            [TaskPhysicalQuantityUnit.FEET]: 'Feet',
            [TaskPhysicalQuantityUnit.GRAMME]: 'Gramme',
            [TaskPhysicalQuantityUnit.HOUR]: 'Hour',
            [TaskPhysicalQuantityUnit.ITEM]: 'Item',
            [TaskPhysicalQuantityUnit.KILO]: 'Kilo',
            [TaskPhysicalQuantityUnit.LENGTH]: 'Length',
            [TaskPhysicalQuantityUnit.LITRE]: 'Litre',
            [TaskPhysicalQuantityUnit.METRE]: 'Metre',
            [TaskPhysicalQuantityUnit.MILLIMETRE]: 'Millimetre',
            [TaskPhysicalQuantityUnit.PACK]: 'Pack',
            [TaskPhysicalQuantityUnit.PAIR]: 'Pair',
            [TaskPhysicalQuantityUnit.PERSON]: 'Person',
            [TaskPhysicalQuantityUnit.POUND]: 'Pound',
            [TaskPhysicalQuantityUnit.SACHET]: 'Sachet',
            [TaskPhysicalQuantityUnit.SET]: 'Set',
            [TaskPhysicalQuantityUnit.SHEET]: 'Sheet',
            [TaskPhysicalQuantityUnit.SQ_FOOT]: 'SQ foot',
            [TaskPhysicalQuantityUnit.SQ_YARD]: 'SQ yard',
            [TaskPhysicalQuantityUnit.SQ_METRE]: 'SQ metre',
            [TaskPhysicalQuantityUnit.TON]: 'Ton',
        },
    },
    baselineForm: {
        baseline: {
            label: 'Baseline list',
            placeholder: 'Select baseline',
        },
        baselineName: {
            label: 'Baseline name',
            placeholder: 'Enter baseline name',
        },
        message: {
            saveSuccess: 'Save baseline successfully',
            taskListEmpty: 'Task list empty',
            deleteSuccess: 'Delete baseline successfully',
            delete: {
                cannotDelete: 'Currently selected baseline cannot be deleted',
                title: 'Notification',
                confirmAsk: 'Are you sure you want to delete this baseline?',
            },
            update: {
                updateSuccess: 'Update baseline name successfully',
            },
            resetSuccess: 'Reset baseline successful',
        },
    },
    table: {
        columns: {
            name: 'Name',
            updatedAt: 'Updated at',
        },
        navigation: {
            synthesis: 'Synthesis',
        },
    },
    resource: {
        tooltip: 'Right click to see options',
        title: {
            resourceList: 'Resource List',
            resourceDetail: 'Resource Detail',
            createResource: 'Create Resource',
            deleteResource: 'Delete Resource',
            assignedTaskNames: 'Assigned Tasks',
        },
        resourceList: {
            name: 'Name',
            type: 'Type',
            files: 'Files',
            resourceUnit: 'Unit',
            taskCount: 'Task Count',
            description: 'Description',
            action: 'Action',
            parentId: 'Parent',
            effectiveDate: 'Effective date',
            unit: 'Unit/Period',
            price: 'Price/Unit',
        },
        placeholder: {
            name: 'Enter name',
            type: 'Select type',
            resourceUnit: 'Enter unit',
            files: 'Select files',
            description: 'Enter description',
            parentId: 'Select parent',
            effectiveDate: 'Enter effective date',
            unit: '...',
            price: '...',
        },
        fileList: {
            name: 'File Name',
            createdBy: 'Created By',
        },
        resourceType: {
            equipment: 'Equipment',
            human_resource: 'Human Resource',
            material: 'Material',
            location: 'Location',
        },
        resourceUit: {
            material: {
                [ResourceMaterialUnitType.BAG]: 'Bag',
                [ResourceMaterialUnitType.BOX]: 'Box',
                [ResourceMaterialUnitType.BUCKET]: 'Bucket',
                [ResourceMaterialUnitType.BUNDLE]: 'Bundle',
                [ResourceMaterialUnitType.CRANE]: 'Crane',
                [ResourceMaterialUnitType.CARTON]: 'Carton',
                [ResourceMaterialUnitType.CUBIC_FEET]: 'Cubic feet',
                [ResourceMaterialUnitType.CUBIC_METRE]: 'Cubic metre',
                [ResourceMaterialUnitType.CUBIC_YARD]: 'Cubic yard',
                [ResourceMaterialUnitType.DOZEN]: 'Dozen',
                [ResourceMaterialUnitType.FEET]: 'Feet',
                [ResourceMaterialUnitType.GRAMME]: 'Gramme',
                [ResourceMaterialUnitType.HOUR]: 'Hour',
                [ResourceMaterialUnitType.ITEM]: 'Item',
                [ResourceMaterialUnitType.KILO]: 'Kilo',
                [ResourceMaterialUnitType.LENGTH]: 'Length',
                [ResourceMaterialUnitType.LITRE]: 'Litre',
                [ResourceMaterialUnitType.METRE]: 'Metre',
                [ResourceMaterialUnitType.MILLIMETRE]: 'Millimetre',
                [ResourceMaterialUnitType.PACK]: 'Pack',
                [ResourceMaterialUnitType.PAIR]: 'Pair',
                [ResourceMaterialUnitType.PERSON]: 'Person',
                [ResourceMaterialUnitType.POUND]: 'Pound',
                [ResourceMaterialUnitType.SACHET]: 'Sachet',
                [ResourceMaterialUnitType.SET]: 'Set',
                [ResourceMaterialUnitType.SHEET]: 'Sheet',
                [ResourceMaterialUnitType.SQ_FOOT]: 'SQ foot',
                [ResourceMaterialUnitType.SQ_YARD]: 'SQ yard',
                [ResourceMaterialUnitType.SQ_METRE]: 'SQ metre',
                [ResourceMaterialUnitType.TON]: 'Ton',
            },
            other: {
                [ResourceOtherUnitType.HOUR]: 'Hour',
                [ResourceOtherUnitType.DAY]: 'Day',
                [ResourceOtherUnitType.WEEK]: 'Week',
                [ResourceOtherUnitType.MONTH]: 'Month',
                [ResourceOtherUnitType.YEAR]: 'Year',
            },
        },
        message: {
            createSuccess: 'Create resource successfully',
            updateSuccess: 'Update resource successfully',
            deleteSuccess: 'Delete resource successfully',
            confirmAsk: 'Are you sure you want to delete this resource?',
            taskCount: 'Click to see all assign tasks',
            effectiveExist: 'Effective date already exists',
        },
        import: {
            option: {
                skip: 'No assignment',
                create: 'Assign to a new resource',
                update: 'Assign to existing resource',
                label: 'Action',
                importToExistingResouce: {
                    assignToResourceWithoutBuildingTree:
                        'Assign to this resource, don’t build tree',
                    assignToResourceUnderneathWithoutBuildingTree:
                        'Assign resource underneath, don’t build tree',
                    assignToResourceUnderneathBuildTree:
                        'Assign resource underneath, build tree',
                },
            },
            resource: {
                label: 'Select resource to assign',
                placeholder: 'Select resource to assign',
            },
            button: {
                next: 'Next',
                prev: 'Prev',
                cancel: 'Cancel',
                submit: 'Submit',
            },
        },
    },
    resourceGroup: {
        title: {
            resourceGroupList: 'Resource Group List',
            resourceGroupDetail: 'Resource Group Detail',
            createResourceGroup: 'Create Resource Group',
            deleteResourceGroup: 'Delete Resource Group',
        },
        resourceGroupList: {
            name: 'Name',
            resources: 'Resources',
            description: 'Description',
            action: 'Action',
        },
        placeholder: {
            name: 'Enter name',
            resources: 'Select resources',
            description: 'Enter description',
        },
        message: {
            createSuccess: 'Create resource group successfully',
            updateSuccess: 'Update resource group successfully',
            deleteSuccess: 'Delete resource group successfully',
            confirmAsk: 'Are you sure you want to delete this resource group?',
        },
    },
    assignResource: {
        title: {
            assignResource: 'Assign Resource',
        },
        label: {
            resource: 'Resources',
            appearanceProfileIds: 'Appearance profile',
        },
        placeholder: {
            resource: 'Select resource',
            appearanceProfileIds: 'Select appearance profile',
        },
        message: {
            errorSelectTaskIdsEmpty: 'Please select tasks',
            resourceRequired: 'The resources fields is required',
            assignResourceSuccess: 'Assign resource successfully',
            unassignResourceSuccess: 'Unassign resource successfully',
        },
        table: {
            header: {
                taskId: 'Task ID',
                taskName: 'Task name',
                status: 'Status',
                resourceName: 'Resource name',
            },
            assigned: 'Assigned',
            unassigned: 'Unassigned',
            button: {
                assign: 'Assign selected',
                unassign: 'Unassign selected',
            },
        },
    },
    assignResourceGroup: {
        title: {
            assignResourceGroup: 'Assign Resource Group',
        },
        label: {
            resourceGroup: 'Resource groups',
            appearanceProfileIds: 'Appearance profile',
        },
        placeholder: {
            resourceGroup: 'Select resource groups',
            appearanceProfileIds: 'Select appearance profile',
        },
        message: {
            errorSelectTaskIdsEmpty: 'Please select resource',
            resourceGroupRequired: 'The resource groups fields is required',
            assignResourceGroupSuccess: 'Assign resource groups successfully',
            unassignResourceGroupSuccess: 'Unassign resource groups successfully',
        },
        table: {
            header: {
                taskId: 'Task ID',
                taskName: 'Task name',
                status: 'Status',
                resourceGroupName: 'Resource group name',
            },
            assigned: 'Assigned',
            unassigned: 'Unassigned',
            button: {
                assign: 'Assign selected',
                unassign: 'Unassign selected',
            },
        },
    },
    topDown: {
        popup: {
            title: 'Top down',
        },
        message: {
            success: 'Top down successful',
            confirmUpdateDelegation: 'Are you sure to update delegation',
            titleConfirmUpdateDelegation: 'Update delegation',
            updateDelegationSuccess: 'Update delegation successfully',
        },
        confirm: {
            title: 'Confirm Topdown',
            message:
                'The Topdown process will delete milestones that relate to deleted links, continue?',
        },
    },
    taskFields: {
        title: {
            list: 'Additional user fields',
            create: 'Create additional task field',
            update: 'Update task field name',
        },
        successMessage: {
            update: {
                name: 'Updated task field name',
            },
            create: {
                field: 'Created task field',
            },
            delete: {
                field: 'Deleted task field',
            },
        },
        labels: {
            name: 'Field name',
            dataType: 'Data type',
            value: 'Value',
            true: 'True',
            false: 'False',
            action: 'Action',
            select: 'Select',
        },
        dataType: {
            [TaskFieldDataType.BOOLEAN]: 'Boolean',
            [TaskFieldDataType.STRING]: 'String',
            [TaskFieldDataType.DATE_TIME]: 'Date time',
            [TaskFieldDataType.NUMBER]: 'Number',
        },
        confirm: {
            delete: 'Are you sure to delete this field?',
            deleteTitle: 'Delete field',
        },
        placeholder: {
            fieldName: 'Enter field name',
            dataType: 'Choose data type',
        },
        tooltip: {
            edit: 'Edit',
            delete: 'Delete',
        },
    },
    appearanceProfile: {
        title: {
            appearanceProfileList: 'Appearance Profile List',
            appearanceProfileDetail: 'Appearance Profile Detail',
            createAppearanceProfile: 'Create Appearance Profile',
            deleteAppearanceProfile: 'Delete  Appearance Profile',
        },
        appearanceProfileList: {
            name: 'Name',
            type: 'Type',
            growthSimulation: 'Growth Simulation',
            action: 'Action',
        },
        placeholder: {
            name: 'Enter name',
            type: 'Select type',
            growthSimulation: 'Select growth simulation',
        },
        message: {
            createSuccess: 'Create appearance profile successfully',
            updateSuccess: 'Update appearance profile successfully',
            deleteSuccess: 'Delete appearance profile successfully',
            confirmAsk: 'Are you sure you want to delete this appearance profile?',
        },
        appearanceType: {
            install: 'Install',
            maintain: 'Maintain',
            remove: 'Remove',
            temporary: 'Temporary',
        },
        growthSimulation: {
            bottom_top: 'Bottom to top',
            top_bottom: 'Top to bottom',
            left_right: 'Left to right',
            right_left: 'Right to left',
            front_back: 'Front to back',
            back_front: 'Back to front',
        },
    },
    searchBox: {
        placeholder: {
            name: 'Search by task name',
        },
        button: {
            search: 'Search',
        },
    },
    bottomUp: {
        popup: {
            title: 'Bottom up',
        },
        message: {
            success: 'Bottom up successful',
            confirmUpdateMilestone: 'Are you sure to update milestones',
            titleConfirmUpdateUpdateMilestone: 'Update milestones',
            updateMilestonesSuccess: 'Update milestone successfully',
        },
        confirm: {
            title: 'Confirm Bottomup',
            message:
                'The Bottomup process will delete milestones that relate to deleted links, continue?',
        },
    },
    activityCode: {
        buttons: {
            createFolder: 'Create folder',
            createSubFolder: 'Create sub folder',
            createActivityCode: 'Create activity code',
        },
        title: {
            activityCodeList: 'Activity Code List',
            assignActivityCode: 'Assign Activity Code',
            deleteActivityCode: 'Delete Activity Code',
            deleteActivityCodeValue: 'Delete Activity Code Value',
            resetActivityCodeValue: 'Reset Activity Code Value',
            createActivityCode: 'Create Activity Code',
            updateActivityCode: 'Update Activity Code',
            createActivityCodeValue: 'Create Activity Code Value',
            updateActivityCodeValue: 'Update Activity Code Value',
        },
        label: {
            name: 'Name',
            parent: 'Parent',
            description: 'Description',
            color: 'Color',
            actions: 'Actions',
            maxLength: 'Max length',
        },
        placeholder: {
            name: 'Enter name',
            parent: 'Enter parent name',
            description: 'Enter description',
            color: 'Select color',
            maxLength: 'Enter max length',
        },
        text: {
            display: 'Display',
        },
        message: {
            createActivityCodeSuccess: 'Create activity code successfully',
            updateActivityCodeSuccess: 'Update activity code successfully',
            deleteActivityCodeSuccess: 'Delete activity code successfully',
            createActivityCodeValueSuccess: 'Create activity code value successfully',
            updateActivityCodeValueSuccess: 'Update activity code value successfully',
            deleteActivityCodeValueSuccess: 'Delete activity code value successfully',
            assignSuccess: 'Assign activity code value successfully',
            resetSuccess: 'Reset activity code value successfully',
            updateDisplaySuccess: 'Update activity code display successfully',
            confirmDeleteActivityCode:
                'Are you sure you want to delete the selected code?',
            confirmDeleteActivityCodeValue:
                'Are you sure you want to remove the selected Activity Code Value?',
            confirmResetActivityCodeValue:
                'Are you sure you want to remove the selected code(s)?',
            errorSelectTaskIdsEmpty: 'Please select tasks',
        },
    },
    baseline: {
        messages: {
            updatedBaselineConfiguration: 'Updated baseline configuration',
        },
        position: {
            top: 'Top',
            bottom: 'Bottom',
            around: 'Around',
        },
    },
    viewer3D: {
        tooltip: 'Drag to resize',
    },
    planningForm: {
        title: {
            update: 'Update planning',
        },
        labels: {
            planningId: 'Planning ID',
            name: 'Planning name',
            currency: 'Currency',
            durationType: 'Default duration type',
            durationFormat: 'Duration format',
            defaultDuration: 'Default duration',
            activityType: 'Default activity type',
            percentCompleteType: 'Default percent complete type',
            projectStart: 'Project start',
            dataDate: 'Data date',
            autoScheduling: 'Auto scheduling',
        },
        placeholders: {
            planningId: 'Enter planning ID',
            name: 'Enter planning name',
            currency: 'Select currency',
            durationType: 'Select duration type',
            durationFormat: 'Select duration format',
            defaultDuration: 'Enter duration',
            activityType: 'Select activity type',
            percentCompleteType: 'Select percent complete type',
            projectStart: 'Choose project start date',
            dataDate: 'Choose data date',
        },
        messages: {
            createSuccess: 'Create planning successfully',
            updateSuccess: 'Update planning successfully',
            errors: {
                maxProjectStart: 'Project start date must be less then data date',
                minDataDate: 'Data date must be greater then project start date',
            },
        },
        currency: {
            [CurrencyType.EURO]: 'Euro',
            [CurrencyType.DOLLAR]: 'Dollar',
        },
        durationFormat: {
            [TaskDurationFormat.HOUR]: 'Hour',
            [TaskDurationFormat.DAY]: 'Day',
            [TaskDurationFormat.WEEK]: 'Week',
            [TaskDurationFormat.MONTH]: 'Month',
            [TaskDurationFormat.YEAR]: 'Year',
        },
    },
    exportForm: {
        title: {
            primavera: 'Export planning to Primavera P6',
            exportOptions: 'Choose how you would like to process each object',
        },
        labels: {
            planningId: 'Planning ID',
            planningName: 'Planning name',
            fileName: 'File name',
        },
        placeholders: {
            planningId: 'Enter new planning ID',
            planningName: 'Enter new planning name',
            fileName: 'Enter file name',
        },
        selectionColumns: {
            object: 'Object',
            command: 'Command',
        },
        exportObjects: {
            tasks: 'Tasks',
            links: 'Links',
            calendars: 'Calendars',
            resources: 'Resources',
            resource_assignments: 'Resource assignments',
            activity_codes: 'Activity codes',
            activity_code_assignments: 'Activity code assignments',
            user_fields: 'User fields',
            user_field_values: 'User field values',
        },
        message: {
            exportSuccess: 'Export planning successfully',
        },
    },
    importXML: {
        importXML: 'Import XML',
        importXMLFile: 'Import XML file',
        importOptionTitle: 'How would you like to import the file?',
        underSelectedTask:
            'Use the Selected Task to merge the data into the current Project',
        endOfProject: 'Append the data to the end of the current Project',
        replacePlanning: 'Replace the data with the current Project',
        importObjectOption: 'Choose how you would like to process each object',
        noSatisfyingOption: 'Please select a task to import this file',
        object: {
            object: 'Object',
            command: 'Command',
            tasks: 'Tasks',
            links: 'Links',
            resources: 'Resources',
        },
    },
    linkForm: {
        title: {
            createLink: 'Create link',
            linkDetail: 'Link detail',
            deleteLink: 'Delete link',
            editPredecessor: 'Edit predecessor',
            editSuccessor: 'Edit successor',
            addPredecessor: 'Add predecessor(s)',
            addSuccessor: 'Add successor(s)',
            currentLinks: 'Current link(s)',
            candidateLinks: 'Candidate for new link(s)',
        },
        dependency: {
            predecessor: 'Predecessor',
            successor: 'Successor',
        },
        tree: {
            columnName: 'Activity name',
            columnID: 'Activity ID',
            columnType: 'Activity type',
        },
        properties: {
            source: 'Source name',
            target: 'Target name',
            type: 'Link type',
            delay: 'Delay',
        },
        placeholder: {
            type: 'Enter link type',
            delay: 'Add lead time to a task',
        },
        buttons: {
            addLink: 'Add link',
        },
        linkType: {
            [LinkType.START_TO_START]: 'Start to start',
            [LinkType.START_TO_FINISH]: 'Start to finish',
            [LinkType.FINISH_TO_START]: 'Finish to start',
            [LinkType.FINISH_TO_FINISH]: 'Finish to finish',
        },
        linkListColumn: {
            dependency: 'Dependency',
            id: 'Activity ID',
            name: 'Activity name',
            start: 'Start',
            finish: 'Finish',
            linkType: 'Link type',
            delay: 'Delay',
        },
        messages: {
            success: 'Create links successfully',
            updateSuccess: 'Update link successfully',
            linkExistInGantt: 'This link already exists',
            linkExistInList: 'This link is already in the list below',
            confirmDeleteLink: 'Are you sure to delete this link?',
            errorSelectTasksLinkToEmpty: 'The selected task list is empty or invalid',
            errorLinkListToCreateEmpty:
                'Please add the link you want to create to the list',
        },
    },
    contextMenu: {
        options: {
            addLink: 'Add link',
            currentLinks: 'Current link(s)',
        },
    },
    saveAsForm: {
        titles: {
            saveResource: 'Save resource',
            saveXML: 'Save XML',
        },
        errors: {
            notFoundResource: 'Not found resource',
        },
    },
    startAppearance: {
        title: 'Start Appearance',
        contentDetail: {
            labelColor: 'Color',
            labelTransparency: 'Transparency',
            transparencyInput: 'Enter transparency',
        },
    },
    activeAppearance: {
        title: 'Active Appearance',
        contentDetail: {
            labelColor: 'Color',
            labelTransparency: 'Transparency',
            labelStartTransparency: 'Start Transparency',
            labelEndTransparency: 'End Transparency',
            labelTransparencyInterpolation: 'Transparency Interpolation',
            transparencyInput: 'Enter transparency',
        },
    },
    endAppearance: {
        title: 'End Appearance',
        contentDetail: {
            labelColor: 'Color',
            labelTransparency: 'Transparency',
            transparencyInput: 'Enter transparency',
        },
    },
};
